<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Copyright (c) 2020.  Zen.Liu .
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~  http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  ~
  ~   @Project: kotlin-utils
  ~   @Module: kotlin-utils
  ~   @File: pom.xml
  ~   @Author:  lcz20@163.com
  ~   @LastModified:  2020-04-19 22:10:23
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cn.zenliu</groupId>
    <artifactId>kotlin-utils</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>


    <modules>
        <module>case-style</module>
        <module>token</module>
        <module>compress</module>
        <module>hash</module>
        <module>format</module>
        <module>nquad</module>
        <module>spec</module>
        <module>measure</module>
    </modules>
    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <kotlin.compiler.languageVersion>1.3</kotlin.compiler.languageVersion>
        <kotlin.compiler.apiVersion>1.3</kotlin.compiler.apiVersion>

        <!--        versions -->
        <kotlin.version>1.3.72</kotlin.version>

        <kotlinx-coroutines.version>1.3.3</kotlinx-coroutines.version>

        <!-- plugins -->
        <build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
        <maven-shade-plugin.version>2.4.3</maven-shade-plugin.version>
        <maven-surefire-plugin.version>2.22.1</maven-surefire-plugin.version>
        <exec-maven-plugin.version>1.5.0</exec-maven-plugin.version>
        <tiles-maven-plugin.version>2.15</tiles-maven-plugin.version>

    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-bom</artifactId>
                <version>${kotlin.version}}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--junit-->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>add-source</id>
                            <phase>initialize</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.basedir}/src/main/kotlin</source>
                                </sources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>add-test-source</id>
                            <phase>initialize</phase>
                            <goals>
                                <goal>add-test-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.basedir}/src/test/kotlin</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>java</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <!--    <mainClass>io.ktor.server.netty.EngineMain</mainClass>-->
                        <mainClass>${vertx.launcher}</mainClass>
                        <arguments>
                            <argument>run</argument>
                            <argument>${vertx.verticle}</argument>
                        </arguments>

                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <version>${kotlin.version}</version>
                    <executions>
                        <execution>
                            <id>compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>test-compile</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>test-compile</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <jvmTarget>1.8</jvmTarget>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.repaint.maven</groupId>
                    <artifactId>tiles-maven-plugin</artifactId>
                    <version>${tiles-maven-plugin.version}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <tiles>
                            <tile>io.ebean.tile:enhancement:${ebean.version}</tile>
                            <tile>io.ebean.tile:kotlin-kapt:${ebean.tile.kt.version}</tile>
                        </tiles>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.junit.jupiter</groupId>
                            <artifactId>junit-jupiter-engine</artifactId>
                            <version>${junit.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                    <configuration>
                        <transformers>
                            <transformer
                                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                <manifestEntries>
                                    <Main-Class>${vertx.launcher}</Main-Class>
                                    <Main-Verticle>${vertx.verticle}</Main-Verticle>
                                </manifestEntries>
                            </transformer>
                            <transformer
                                implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                <resource>META-INF/services/io.vertx.core.spi.VerticleFactory</resource>
                            </transformer>
                            <transformer
                                implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            <!-- for ktor -->
                            <!--  <transformer
                                             implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                         <mainClass>io.ktor.server.netty.EngineMain</mainClass>
                                     </transformer>-->
                        </transformers>
                        <artifactSet/>
                        <outputFile>
                            ${project.build.directory}/${project.artifactId}-${project.version}-fat.jar
                        </outputFile>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq-codegen-maven</artifactId>
                    <version>${jooq.version}</version>
                    <executions>
                        <execution>
                            <id>jooq-codegen</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <!--                      <dependency>
                                                  <groupId>io.github.jklingsporn</groupId>
                                                  <artifactId>vertx-jooq-generate</artifactId>
                                                  <version>${vertx-jooq-generate.version}</version>
                                              </dependency>-->
                        <dependency>
                            <groupId>org.postgresql</groupId>
                            <artifactId>postgresql</artifactId>
                            <version>${pgstd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>mysql</groupId>
                            <artifactId>mysql-connector-java</artifactId>
                            <version>${mysql.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <skip>${jooq.gen.skip}</skip>
                        <logging>INFO</logging>
                        <jdbc>
                            <driver>${jooq.gen.driver}</driver>
                            <url>${jooq.gen.jdbc}</url>
                            <user>${jooq.gen.user}</user>
                            <password>${jooq.gen.password}</password>
                        </jdbc>
                        <generator>
                            <name>org.jooq.codegen.JavaGenerator</name>
                            <!--                            <name>io.github.jklingsporn.vertx.jooq.generate.classic.ClassicReactiveVertxGenerator</name>-->
                            <database>
                                <name>${jooq.gen.database}</name>
                                <includes>.*</includes>
                                <inputSchema>${jooq.gen.schema}</inputSchema>
                                <unsignedTypes>false</unsignedTypes>
                                <outputSchemaToDefault>true</outputSchemaToDefault>
                                <forcedTypes>
                                    <!-- Convert tinyint to boolean -->
                                    <forcedType>
                                        <name>BOOLEAN</name>
                                        <includeTypes>(?i:TINYINT)</includeTypes>
                                        <objectType>ALL</objectType>
                                    </forcedType>
                                    <!--						             Convert varchar column with name 'someJsonObject' to a io.vertx.core.json.JsonObject-->
                                    <!--      <forcedType>
                                              <userType>io.vertx.core.json.JsonObject</userType>
                                              <converter>io.github.jklingsporn.vertx.jooq.shared.JsonObjectConverter</converter>
      &lt;!&ndash;							            <expression>someJsonObject</expression>&ndash;&gt;
                                              <includeTypes>jsonb</includeTypes>
                                              <objectType>ALL</objectType>
                                          </forcedType>-->
                                    <!-- Convert varchar column with name 'someJsonArray' to a io.vertx.core.json.JsonArray-->
                                    <!-- <forcedType>
                                         <userType>io.vertx.core.json.JsonArray</userType>
                                         <converter>io.github.jklingsporn.vertx.jooq.shared.JsonArrayConverter</converter>
 &lt;!&ndash;							            <expression>someJsonArray</expression>&ndash;&gt;
                                         <includeTypes>json</includeTypes>
                                         <objectType>ALL</objectType>
                                     </forcedType>-->
                                </forcedTypes>
                            </database>
                            <generate>
                                <daos>${jooq.gen.dao}</daos>
                                <interfaces>${jooq.gen.interface}</interfaces>
                                <pojos>${jooq.gen.pojo}</pojos>
                                <javaTimeTypes>true</javaTimeTypes>
                                <springAnnotations>false</springAnnotations>
                                <generatedAnnotation>false</generatedAnnotation>
                            </generate>
                            <target>
                                <packageName>${jooq.gen.package}</packageName>
                                <directory>${jooq.gen.output}</directory>
                            </target>
                            <!--   <strategy>
                                   <name>io.github.jklingsporn.vertx.jooq.generate.VertxGeneratorStrategy</name>
                               </strategy>-->
                        </generator>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>kotlin-maven-plugin</artifactId>
                <groupId>org.jetbrains.kotlin</groupId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
        </plugins>
    </build>


</project>
